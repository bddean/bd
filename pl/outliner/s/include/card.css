/****************
 * Cards
 */

/* Add margin between paragraphs to make empty lines unnecessary.
This saves space.

Note that content-editable's first block is usually just a plain text
node. */
.content > div {
	margin-top: 0.5rem;
}

.card {
	display: grid;
	background: var(--bg);
	&>.catalog{background: var(--bg);}
	grid-template-columns: 1fr 150px;
	grid-template-rows: min-content 1fr;
	& > .content  { grid-row: 1; grid-column: 1; }
	& > .props    { grid-row: 1; grid-column: 2; }
	& > .catalog { grid-row: 2; grid-column: 1 / 3; }

	&[data-removed] { display: none; }
}

:root[view=close] .card:not([_selected]) {
	grid-template-rows: 1rem 1fr;
	&>.content {
		height: 1rem;
		line-height: 1rem;
		overflow-y: hidden;
	}
	&>.props { display: none; }
}

:root:is([view=prose],:not([view]), [view=close]) .card {
	padding-left: 10px;
	margin-top: 16px;

	border-left: 1px solid gray;
	&[_selected] {
		border-left: 2.5px solid var(--red);
	}
	&:not(:has(>:focus)) > .toolbar:not(:focus-within):not(:has(:active)) {
		display: none;
	}
	/* HACK: Use "required" attribute to make empty inputs invalid */
	&:not([_selected]) >.props:not(:has(
		:is(input , select , textarea):not(:invalid)
	)) { display: none; }
	/* Additionally, hide individual empty items */
	&:not([_selected]) > .props :is(
		:invalid,
		label:has(+:invalid),
	) {
		display: none;
	}

	&[data-task=""] > .props {
		& label:has(+ [name=due]),[name=due]
		, label:has(+ [name=scheduled]),[name=scheduled] {
			display: none;
		}
	}
}
:root[view=rows] .card {
	/* copied from squish view for now! */
	grid-template-rows: 1rem 1fr;
	grid-template-columns: 1fr min-content;

	&[_selected]{
		grid-template-rows: min-content 1fr;
		&>.content {
			background: #eec; /* hard to see otherwise */
			/* TODO: We could highlight even/odd rows using counters. */
		}
	}

	&:not([_selected])>:not(.catalog) {
		height: 1rem;
		line-height: 1rem;
		overflow-y: hidden;
	}
	&>.props {
		grid-auto-flow: column;
		grid-auto-columns: min-content;
		&>label {
			display: none;
		}
		&>* {
			height: 1rem;
		}
	}
}
.content { outline: none; }
.card:is([_selected], :has([_selected])) {
	&>.content::first-line { color: var(--red); }
	/* &>.content { background: #ecdac8;	}*/
}
.card>.content::first-line {
	/*font-size: larger;*/
	font-variant: small-caps;
	font-weight: 400;
	font-style: italic;
}


/** Containers of cards */
.catalog { display: grid; }


